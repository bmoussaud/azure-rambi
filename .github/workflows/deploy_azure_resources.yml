name: Deploy Azure Resources - azure-rambi

on:
  push:
    paths:
      - 'infra/**'
      - '.github/workflows/deploy_azure_resources.yml'
      - 'src/**'
    branches:
      - main
  workflow_dispatch:

env:               
  ACR_NAME: azurerambitfnbpycbnkdum

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout to the branch

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          
  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v3
        name: Checkout to the branch
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      # **Deploy Azure Resources using Bicep**
      - name: Deploy Infrastructure layer
        uses: azure/arm-deploy@v1
        with:
          subscriptionId:  ${{ vars.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.AZURE_RESOURCE_GROUP }}
          template: infra/main.bicep
          failOnStdErr: false
          scope: resourcegroup
      # Azure Logout
      - name: Azure Logout
        if: always()
        run: az logout

  deploy-movie-poster-service:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - uses: actions/checkout@v3
        name: Checkout to the branch
      # **Azure Login**
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      # **Build and Deploy Movie Poster Service**
      - name: Build and Deploy Movie Poster Service
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}/src/movie_poster_svc
          acrName: ${{ env.ACR_NAME }}
          imageToBuild: ${{ env.ACR_NAME }}.azurecr.io/azure-rambi-ci/movie_poster_svc:${{ github.sha }}
          containerAppEnvironment: azure-rambi
          containerAppName: movie-poster-svc
          resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
      # Azure Logout
      - name: Azure Logout
        if: always()
        run: az logout

  deploy-movie-generator-service:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - uses: actions/checkout@v3
        name: Checkout to the branch
      # **Azure Login**
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      # **Build and Deploy Movie Generate Service**
      - name: Build and Deploy Movie Generate Service
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}/src/movie_generator_svc
          acrName: ${{ env.ACR_NAME }}
          imageToBuild: ${{ env.ACR_NAME }}.azurecr.io/azure-rambi-ci/movie_generator_svc:${{ github.sha }}
          containerAppEnvironment: azure-rambi
          containerAppName: movie-generator-svc
          resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
      # Azure Logout
      - name: Azure Logout
        if: always()
        run: az logout

  deploy-gui:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - uses: actions/checkout@v3
        name: Checkout to the branch
      # **Azure Login**
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      # **Build and Deploy GUI**
      - name: Build and Deploy GUI
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}/src/azurerambi
          acrName: ${{ env.ACR_NAME }}
          imageToBuild: ${{ env.ACR_NAME }}.azurecr.io/azure-rambi-ci/gui:${{ github.sha }}
          containerAppEnvironment: azure-rambi
          containerAppName: gui-svc
          resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
          environmentVariables: |
            - name: GITHUB_SHA
              value: ${{ github.sha }}
            - name: GITHUB_JOB
              value: ${{ github.job }}
            - name: GITHUB_ACTOR
              value: ${{ github.actor }}
            - name: GITHUB_RUN_NUMBER
              value: ${{ github.run_number }}
      # Azure Logout
      - name: Azure Logout
        if: always()
        run: az logout
